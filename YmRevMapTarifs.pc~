#pragma ident "%Z% FileName: $RCSfile: YmRevMapTarifs.pc,v $ Version: $Revision: 1.6 $ Date: $Date: 2006/04/27 09:08:46 $ %Z %"

//## Module: YmRevMapTarifs
//SFD
//  Name:    YmRevMapTarifs.cpp
//  Author:  JM. Grugeaux
//  Desc:    traitement de la liste des code tarifs
//EFD


using namespace std;

//standard includes
#include <iterator>
#include <sqlca.h>

//application includes
#include <YmRevGlobal.h>
#include <YmRevMapTarifs.h>

//## Configuration du contexte de base JRO IC SRO DT 23805
extern sql_context ctxRevMain;
EXEC SQL CONTEXT USE :ctxRevMain;


YmRevMapTarifs::YmRevMapTarifs()
  {
    nbFindMapTarif = 0;
  }
YmRevMapTarifs::~YmRevMapTarifs()
  {
    MapTarifsType::iterator iPos = _MapTarifs.begin();
    MapTarifsType::iterator iFin = _MapTarifs.end();

    YmRevTarifs* pRevTarif;
    while (iPos!=iFin)
       {
       pRevTarif =iPos->second;
       delete pRevTarif;
       iPos++;
       }
    _MapTarifs.clear();
  }

//DM7978 - HRI - 06/03/2015 - Ajout du numero de palier
int YmRevMapTarifs::init() //initialisation de la map a partir de la base
                                    // 0 = OK, -1 = pas trouve
    {
    nbFindMapTarif = 0;
    int iRet=0;
    int iNb=0;
    EXEC SQL BEGIN DECLARE SECTION;
       varchar vcCodeTarif[5];
       varchar vcClassOfService[3];
       char start_date[9];
       char end_date[9];
       int iCoefficient;
       int iFixe;
       int iFixeKm;
       short inull_coeff = -1;
       short inull_fixe = -1;
       short inull_fixekm = -1;
	   int numPalier;
    EXEC SQL END DECLARE SECTION;
   
    EXEC SQL WHENEVER SQLERROR DO sql_error((char *)"liste des tarifs illisible",1);
    EXEC SQL DECLARE cMapTarif CURSOR FOR
         SELECT code_tarif, class_of_service, to_char (start_date, 'YYYYMMDD'), to_char (end_date, 'YYYYMMDD'),
                coefficient, fixe, fixe_km, num_Palier
         FROM rev_tarifs_view ORDER BY code_tarif asc, class_of_service desc, num_palier desc;
    EXEC SQL OPEN cMapTarif ;

    EXEC SQL WHENEVER NOT FOUND DO break;
    string skey1;
    string skey2;
    string sStartDate;
    string sEndDate;
    while(1)
       {
       EXEC SQL FETCH cMapTarif INTO :vcCodeTarif, :vcClassOfService, :start_date, :end_date,
                                     :iCoefficient:inull_coeff, :iFixe:inull_fixe, :iFixeKm:inull_fixekm,:numPalier;
       if (inull_coeff == -1)
         iCoefficient = 0;
       if (inull_fixe == -1)
         iFixe = 0;
       if (inull_fixekm == -1)
         iFixeKm = 0;
       iNb++;
       vcCodeTarif.arr[vcCodeTarif.len] = '\0';
       vcClassOfService.arr[vcClassOfService.len] = '\0';
       skey1 = (char*)vcCodeTarif.arr; 
       skey2 = (char*)vcClassOfService.arr;
       sStartDate = start_date;
       sEndDate = end_date;
       YmRevTarifs *pRevTarif = new YmRevTarifs(skey1, skey2, numPalier, YmDate(sStartDate), YmDate(sEndDate),
                                                iCoefficient, iFixe, iFixeKm);
       _MapTarifs.insert(MapTarifsType::value_type(skey1, pRevTarif));
	   	char dateW[25];
	cout << "YmRevMapTarifs::init()   Type = " << skey1 << " CS = " << skey2 << " sNumPalier = " << numPalier << " StartDate = " << sStartDate << " EndDate = " << sEndDate << endl;

     }
	cout << "YmRevMapTarifs::init()   size map = " <<_MapTarifs.size() << endl;

    EXEC SQL CLOSE cMapTarif ;
    if  (iNb==0) 
        iRet=-1;
    else
        iRet=0;
    return iRet;
    }

	//DM7978 - HRI - 06/03/2015 - Ajout du numero de palier
YmRevTarifs* YmRevMapTarifs::isInMap(string sCodeTarif, string sClassOfService, int sNumPalier, YmDate DateDepart)
 //retourne pointeur si OK, NULL sinon
 {
    MapTarifsType::iterator iPos;
    MapTarifsType::iterator iPos0;
    YmRevTarifs* pYmRevTarif = NULL;
    YmRevTarifs* pYmRevTarifSubcOk = NULL;
    YmRevTarifs* pYmRevTarifCmptOk = NULL;
    YmRevTarifs* pYmRevTarifAllOk = NULL;
    string sCmptOk = sClassOfService;
    string sSubcOk = sClassOfService;
    sCmptOk[1] = '0';
    sSubcOk[0] = '0';

	char dateW[25];
	//cout << "YmRevMapTarifs::isInMap   Recherche CS = " << sClassOfService << " sCodeTarif = " << sCodeTarif << " sNumPalier = " << sNumPalier << " DptDate = " << DateDepart.PrintResaven(dateW) << " sSubcOk = " << sSubcOk <<  " sCmptOk = " << sCmptOk <<endl;
	
    string skey = sCodeTarif;
    iPos0 = iPos = _MapTarifs.find (skey);
    while ((iPos != _MapTarifs.end()) && (iPos->first == iPos0->first))
    {
      pYmRevTarif = iPos->second;
      if ((pYmRevTarif->get_startDate() <= DateDepart) && (pYmRevTarif->get_endDate() >= DateDepart))
      {
        if (pYmRevTarif->get_ClassOfService() == sClassOfService && pYmRevTarif->get_numPalier() == sNumPalier)
        {
           nbFindMapTarif++;
		   //cout << "YmRevMapTarifs::isInMap ====> OK TROUVE 0" << endl;
           return pYmRevTarif;
        }
        else if (pYmRevTarif->get_ClassOfService() == sClassOfService && pYmRevTarif->get_numPalier() < 0)
        {
           nbFindMapTarif++;
		   //cout << "YmRevMapTarifs::isInMap ====> OK TROUVE 0 BIS" << endl;
           return pYmRevTarif;
        }		
        else if (pYmRevTarif->get_ClassOfService() == sSubcOk && pYmRevTarif->get_numPalier() < 0)
           pYmRevTarifSubcOk = pYmRevTarif;
        else if (pYmRevTarif->get_ClassOfService() == sCmptOk && pYmRevTarif->get_numPalier() < 0)
           pYmRevTarifCmptOk = pYmRevTarif;
        else if (pYmRevTarif->get_ClassOfService() == "00" && pYmRevTarif->get_numPalier() < 0)
           pYmRevTarifAllOk = pYmRevTarif;
     
      }
      iPos++;
    }
    if (pYmRevTarifSubcOk)
    {
      nbFindMapTarif++;
	  //cout << "YmRevMapTarifs::isInMap ====> OK TROUVE 1" << endl;
      return pYmRevTarifSubcOk;
    }
    if (pYmRevTarifCmptOk)
    {
      nbFindMapTarif++;
	  //cout << "YmRevMapTarifs::isInMap ====> OK TROUVE 2" << endl;
      return pYmRevTarifCmptOk;
    }
    if (pYmRevTarifAllOk)
    {
      nbFindMapTarif++;
 	  //cout << "YmRevMapTarifs::isInMap ====> OK TROUVE 3" << endl;

      return pYmRevTarifAllOk;
    }
    return NULL;
}

